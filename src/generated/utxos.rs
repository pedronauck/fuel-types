// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Utxo {
    #[prost(string, tag = "1")]
    pub subject: ::prost::alloc::string::String,
    #[prost(int64, tag = "2")]
    pub block_height: i64,
    #[prost(bytes = "vec", tag = "3")]
    pub tx_id: ::prost::alloc::vec::Vec<u8>,
    #[prost(int32, tag = "4")]
    pub tx_index: i32,
    #[prost(int32, tag = "5")]
    pub input_index: i32,
    #[prost(enumeration = "UtxoType", tag = "6")]
    pub utxo_type: i32,
    #[prost(bytes = "vec", tag = "7")]
    pub utxo_id: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes = "vec", tag = "8")]
    pub value: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes = "vec", tag = "9")]
    pub sender_address: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes = "vec", tag = "10")]
    pub recipient_address: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes = "vec", tag = "11")]
    pub nonce: ::prost::alloc::vec::Vec<u8>,
    #[prost(int64, tag = "12")]
    pub amount: i64,
    #[prost(bytes = "vec", tag = "13")]
    pub data: ::prost::alloc::vec::Vec<u8>,
    #[prost(message, optional, tag = "14")]
    pub created_at: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag = "15")]
    pub published_at: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag = "16")]
    pub updated_at: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(message, optional, tag = "17")]
    pub pointer: ::core::option::Option<super::pointers::UtxoPointer>,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum UtxoType {
    Contract = 0,
    Coin = 1,
    Message = 2,
}
impl UtxoType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Contract => "CONTRACT",
            Self::Coin => "COIN",
            Self::Message => "MESSAGE",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CONTRACT" => Some(Self::Contract),
            "COIN" => Some(Self::Coin),
            "MESSAGE" => Some(Self::Message),
            _ => None,
        }
    }
}
