// source: receipts.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var pointers_pb = require('./pointers_pb.js');
goog.object.extend(proto, pointers_pb);
goog.exportSymbol('proto.receipts.Receipt', null, global);
goog.exportSymbol('proto.receipts.Receipt.ReceiptCase', null, global);
goog.exportSymbol('proto.receipts.ReceiptBurn', null, global);
goog.exportSymbol('proto.receipts.ReceiptCall', null, global);
goog.exportSymbol('proto.receipts.ReceiptLog', null, global);
goog.exportSymbol('proto.receipts.ReceiptLogData', null, global);
goog.exportSymbol('proto.receipts.ReceiptMessageOut', null, global);
goog.exportSymbol('proto.receipts.ReceiptMint', null, global);
goog.exportSymbol('proto.receipts.ReceiptPanic', null, global);
goog.exportSymbol('proto.receipts.ReceiptReturn', null, global);
goog.exportSymbol('proto.receipts.ReceiptReturnData', null, global);
goog.exportSymbol('proto.receipts.ReceiptRevert', null, global);
goog.exportSymbol('proto.receipts.ReceiptScriptResult', null, global);
goog.exportSymbol('proto.receipts.ReceiptTransfer', null, global);
goog.exportSymbol('proto.receipts.ReceiptTransferOut', null, global);
goog.exportSymbol('proto.receipts.ReceiptType', null, global);
goog.exportSymbol('proto.receipts.ScriptResultType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.Receipt = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.receipts.Receipt.oneofGroups_);
};
goog.inherits(proto.receipts.Receipt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.Receipt.displayName = 'proto.receipts.Receipt';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.ReceiptCall = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.receipts.ReceiptCall, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.ReceiptCall.displayName = 'proto.receipts.ReceiptCall';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.ReceiptReturn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.receipts.ReceiptReturn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.ReceiptReturn.displayName = 'proto.receipts.ReceiptReturn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.ReceiptReturnData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.receipts.ReceiptReturnData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.ReceiptReturnData.displayName = 'proto.receipts.ReceiptReturnData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.ReceiptPanic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.receipts.ReceiptPanic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.ReceiptPanic.displayName = 'proto.receipts.ReceiptPanic';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.ReceiptRevert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.receipts.ReceiptRevert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.ReceiptRevert.displayName = 'proto.receipts.ReceiptRevert';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.ReceiptLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.receipts.ReceiptLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.ReceiptLog.displayName = 'proto.receipts.ReceiptLog';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.ReceiptLogData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.receipts.ReceiptLogData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.ReceiptLogData.displayName = 'proto.receipts.ReceiptLogData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.ReceiptTransfer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.receipts.ReceiptTransfer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.ReceiptTransfer.displayName = 'proto.receipts.ReceiptTransfer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.ReceiptTransferOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.receipts.ReceiptTransferOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.ReceiptTransferOut.displayName = 'proto.receipts.ReceiptTransferOut';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.ReceiptScriptResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.receipts.ReceiptScriptResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.ReceiptScriptResult.displayName = 'proto.receipts.ReceiptScriptResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.ReceiptMessageOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.receipts.ReceiptMessageOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.ReceiptMessageOut.displayName = 'proto.receipts.ReceiptMessageOut';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.ReceiptMint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.receipts.ReceiptMint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.ReceiptMint.displayName = 'proto.receipts.ReceiptMint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.receipts.ReceiptBurn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.receipts.ReceiptBurn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.receipts.ReceiptBurn.displayName = 'proto.receipts.ReceiptBurn';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.receipts.Receipt.oneofGroups_ = [[7,8,9,10,11,12,13,14,15,16,17,18,19]];

/**
 * @enum {number}
 */
proto.receipts.Receipt.ReceiptCase = {
  RECEIPT_NOT_SET: 0,
  CALL: 7,
  RETURN: 8,
  RETURN_DATA: 9,
  PANIC: 10,
  REVERT: 11,
  LOG: 12,
  LOG_DATA: 13,
  TRANSFER: 14,
  TRANSFER_OUT: 15,
  SCRIPT_RESULT: 16,
  MESSAGE_OUT: 17,
  MINT: 18,
  BURN: 19
};

/**
 * @return {proto.receipts.Receipt.ReceiptCase}
 */
proto.receipts.Receipt.prototype.getReceiptCase = function() {
  return /** @type {proto.receipts.Receipt.ReceiptCase} */(jspb.Message.computeOneofCase(this, proto.receipts.Receipt.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.Receipt.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.Receipt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.Receipt} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.Receipt.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),
    txId: msg.getTxId_asB64(),
    txIndex: jspb.Message.getFieldWithDefault(msg, 4, 0),
    receiptIndex: jspb.Message.getFieldWithDefault(msg, 5, 0),
    receiptType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    call: (f = msg.getCall()) && proto.receipts.ReceiptCall.toObject(includeInstance, f),
    pb_return: (f = msg.getReturn()) && proto.receipts.ReceiptReturn.toObject(includeInstance, f),
    returnData: (f = msg.getReturnData()) && proto.receipts.ReceiptReturnData.toObject(includeInstance, f),
    panic: (f = msg.getPanic()) && proto.receipts.ReceiptPanic.toObject(includeInstance, f),
    revert: (f = msg.getRevert()) && proto.receipts.ReceiptRevert.toObject(includeInstance, f),
    log: (f = msg.getLog()) && proto.receipts.ReceiptLog.toObject(includeInstance, f),
    logData: (f = msg.getLogData()) && proto.receipts.ReceiptLogData.toObject(includeInstance, f),
    transfer: (f = msg.getTransfer()) && proto.receipts.ReceiptTransfer.toObject(includeInstance, f),
    transferOut: (f = msg.getTransferOut()) && proto.receipts.ReceiptTransferOut.toObject(includeInstance, f),
    scriptResult: (f = msg.getScriptResult()) && proto.receipts.ReceiptScriptResult.toObject(includeInstance, f),
    messageOut: (f = msg.getMessageOut()) && proto.receipts.ReceiptMessageOut.toObject(includeInstance, f),
    mint: (f = msg.getMint()) && proto.receipts.ReceiptMint.toObject(includeInstance, f),
    burn: (f = msg.getBurn()) && proto.receipts.ReceiptBurn.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    pointer: (f = msg.getPointer()) && pointers_pb.ReceiptPointer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.Receipt}
 */
proto.receipts.Receipt.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.Receipt;
  return proto.receipts.Receipt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.Receipt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.Receipt}
 */
proto.receipts.Receipt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlockHeight(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTxIndex(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReceiptIndex(value);
      break;
    case 6:
      var value = /** @type {!proto.receipts.ReceiptType} */ (reader.readEnum());
      msg.setReceiptType(value);
      break;
    case 7:
      var value = new proto.receipts.ReceiptCall;
      reader.readMessage(value,proto.receipts.ReceiptCall.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 8:
      var value = new proto.receipts.ReceiptReturn;
      reader.readMessage(value,proto.receipts.ReceiptReturn.deserializeBinaryFromReader);
      msg.setReturn(value);
      break;
    case 9:
      var value = new proto.receipts.ReceiptReturnData;
      reader.readMessage(value,proto.receipts.ReceiptReturnData.deserializeBinaryFromReader);
      msg.setReturnData(value);
      break;
    case 10:
      var value = new proto.receipts.ReceiptPanic;
      reader.readMessage(value,proto.receipts.ReceiptPanic.deserializeBinaryFromReader);
      msg.setPanic(value);
      break;
    case 11:
      var value = new proto.receipts.ReceiptRevert;
      reader.readMessage(value,proto.receipts.ReceiptRevert.deserializeBinaryFromReader);
      msg.setRevert(value);
      break;
    case 12:
      var value = new proto.receipts.ReceiptLog;
      reader.readMessage(value,proto.receipts.ReceiptLog.deserializeBinaryFromReader);
      msg.setLog(value);
      break;
    case 13:
      var value = new proto.receipts.ReceiptLogData;
      reader.readMessage(value,proto.receipts.ReceiptLogData.deserializeBinaryFromReader);
      msg.setLogData(value);
      break;
    case 14:
      var value = new proto.receipts.ReceiptTransfer;
      reader.readMessage(value,proto.receipts.ReceiptTransfer.deserializeBinaryFromReader);
      msg.setTransfer(value);
      break;
    case 15:
      var value = new proto.receipts.ReceiptTransferOut;
      reader.readMessage(value,proto.receipts.ReceiptTransferOut.deserializeBinaryFromReader);
      msg.setTransferOut(value);
      break;
    case 16:
      var value = new proto.receipts.ReceiptScriptResult;
      reader.readMessage(value,proto.receipts.ReceiptScriptResult.deserializeBinaryFromReader);
      msg.setScriptResult(value);
      break;
    case 17:
      var value = new proto.receipts.ReceiptMessageOut;
      reader.readMessage(value,proto.receipts.ReceiptMessageOut.deserializeBinaryFromReader);
      msg.setMessageOut(value);
      break;
    case 18:
      var value = new proto.receipts.ReceiptMint;
      reader.readMessage(value,proto.receipts.ReceiptMint.deserializeBinaryFromReader);
      msg.setMint(value);
      break;
    case 19:
      var value = new proto.receipts.ReceiptBurn;
      reader.readMessage(value,proto.receipts.ReceiptBurn.deserializeBinaryFromReader);
      msg.setBurn(value);
      break;
    case 20:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 21:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    case 22:
      var value = new pointers_pb.ReceiptPointer;
      reader.readMessage(value,pointers_pb.ReceiptPointer.deserializeBinaryFromReader);
      msg.setPointer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.Receipt.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.Receipt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.Receipt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.Receipt.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockHeight();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getTxIndex();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getReceiptIndex();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getReceiptType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.receipts.ReceiptCall.serializeBinaryToWriter
    );
  }
  f = message.getReturn();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.receipts.ReceiptReturn.serializeBinaryToWriter
    );
  }
  f = message.getReturnData();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.receipts.ReceiptReturnData.serializeBinaryToWriter
    );
  }
  f = message.getPanic();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.receipts.ReceiptPanic.serializeBinaryToWriter
    );
  }
  f = message.getRevert();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.receipts.ReceiptRevert.serializeBinaryToWriter
    );
  }
  f = message.getLog();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.receipts.ReceiptLog.serializeBinaryToWriter
    );
  }
  f = message.getLogData();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.receipts.ReceiptLogData.serializeBinaryToWriter
    );
  }
  f = message.getTransfer();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.receipts.ReceiptTransfer.serializeBinaryToWriter
    );
  }
  f = message.getTransferOut();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.receipts.ReceiptTransferOut.serializeBinaryToWriter
    );
  }
  f = message.getScriptResult();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.receipts.ReceiptScriptResult.serializeBinaryToWriter
    );
  }
  f = message.getMessageOut();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.receipts.ReceiptMessageOut.serializeBinaryToWriter
    );
  }
  f = message.getMint();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.receipts.ReceiptMint.serializeBinaryToWriter
    );
  }
  f = message.getBurn();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.receipts.ReceiptBurn.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPointer();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      pointers_pb.ReceiptPointer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.Receipt.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 block_height = 2;
 * @return {number}
 */
proto.receipts.Receipt.prototype.getBlockHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.setBlockHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes tx_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.Receipt.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes tx_id = 3;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.Receipt.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.Receipt.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int32 tx_index = 4;
 * @return {number}
 */
proto.receipts.Receipt.prototype.getTxIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.setTxIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 receipt_index = 5;
 * @return {number}
 */
proto.receipts.Receipt.prototype.getReceiptIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.setReceiptIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional ReceiptType receipt_type = 6;
 * @return {!proto.receipts.ReceiptType}
 */
proto.receipts.Receipt.prototype.getReceiptType = function() {
  return /** @type {!proto.receipts.ReceiptType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.receipts.ReceiptType} value
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.setReceiptType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional ReceiptCall call = 7;
 * @return {?proto.receipts.ReceiptCall}
 */
proto.receipts.Receipt.prototype.getCall = function() {
  return /** @type{?proto.receipts.ReceiptCall} */ (
    jspb.Message.getWrapperField(this, proto.receipts.ReceiptCall, 7));
};


/**
 * @param {?proto.receipts.ReceiptCall|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setCall = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.receipts.Receipt.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasCall = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ReceiptReturn return = 8;
 * @return {?proto.receipts.ReceiptReturn}
 */
proto.receipts.Receipt.prototype.getReturn = function() {
  return /** @type{?proto.receipts.ReceiptReturn} */ (
    jspb.Message.getWrapperField(this, proto.receipts.ReceiptReturn, 8));
};


/**
 * @param {?proto.receipts.ReceiptReturn|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setReturn = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.receipts.Receipt.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearReturn = function() {
  return this.setReturn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasReturn = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ReceiptReturnData return_data = 9;
 * @return {?proto.receipts.ReceiptReturnData}
 */
proto.receipts.Receipt.prototype.getReturnData = function() {
  return /** @type{?proto.receipts.ReceiptReturnData} */ (
    jspb.Message.getWrapperField(this, proto.receipts.ReceiptReturnData, 9));
};


/**
 * @param {?proto.receipts.ReceiptReturnData|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setReturnData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.receipts.Receipt.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearReturnData = function() {
  return this.setReturnData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasReturnData = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ReceiptPanic panic = 10;
 * @return {?proto.receipts.ReceiptPanic}
 */
proto.receipts.Receipt.prototype.getPanic = function() {
  return /** @type{?proto.receipts.ReceiptPanic} */ (
    jspb.Message.getWrapperField(this, proto.receipts.ReceiptPanic, 10));
};


/**
 * @param {?proto.receipts.ReceiptPanic|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setPanic = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.receipts.Receipt.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearPanic = function() {
  return this.setPanic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasPanic = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ReceiptRevert revert = 11;
 * @return {?proto.receipts.ReceiptRevert}
 */
proto.receipts.Receipt.prototype.getRevert = function() {
  return /** @type{?proto.receipts.ReceiptRevert} */ (
    jspb.Message.getWrapperField(this, proto.receipts.ReceiptRevert, 11));
};


/**
 * @param {?proto.receipts.ReceiptRevert|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setRevert = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.receipts.Receipt.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearRevert = function() {
  return this.setRevert(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasRevert = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ReceiptLog log = 12;
 * @return {?proto.receipts.ReceiptLog}
 */
proto.receipts.Receipt.prototype.getLog = function() {
  return /** @type{?proto.receipts.ReceiptLog} */ (
    jspb.Message.getWrapperField(this, proto.receipts.ReceiptLog, 12));
};


/**
 * @param {?proto.receipts.ReceiptLog|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setLog = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.receipts.Receipt.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearLog = function() {
  return this.setLog(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasLog = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ReceiptLogData log_data = 13;
 * @return {?proto.receipts.ReceiptLogData}
 */
proto.receipts.Receipt.prototype.getLogData = function() {
  return /** @type{?proto.receipts.ReceiptLogData} */ (
    jspb.Message.getWrapperField(this, proto.receipts.ReceiptLogData, 13));
};


/**
 * @param {?proto.receipts.ReceiptLogData|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setLogData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.receipts.Receipt.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearLogData = function() {
  return this.setLogData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasLogData = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ReceiptTransfer transfer = 14;
 * @return {?proto.receipts.ReceiptTransfer}
 */
proto.receipts.Receipt.prototype.getTransfer = function() {
  return /** @type{?proto.receipts.ReceiptTransfer} */ (
    jspb.Message.getWrapperField(this, proto.receipts.ReceiptTransfer, 14));
};


/**
 * @param {?proto.receipts.ReceiptTransfer|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setTransfer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.receipts.Receipt.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearTransfer = function() {
  return this.setTransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasTransfer = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ReceiptTransferOut transfer_out = 15;
 * @return {?proto.receipts.ReceiptTransferOut}
 */
proto.receipts.Receipt.prototype.getTransferOut = function() {
  return /** @type{?proto.receipts.ReceiptTransferOut} */ (
    jspb.Message.getWrapperField(this, proto.receipts.ReceiptTransferOut, 15));
};


/**
 * @param {?proto.receipts.ReceiptTransferOut|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setTransferOut = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.receipts.Receipt.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearTransferOut = function() {
  return this.setTransferOut(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasTransferOut = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional ReceiptScriptResult script_result = 16;
 * @return {?proto.receipts.ReceiptScriptResult}
 */
proto.receipts.Receipt.prototype.getScriptResult = function() {
  return /** @type{?proto.receipts.ReceiptScriptResult} */ (
    jspb.Message.getWrapperField(this, proto.receipts.ReceiptScriptResult, 16));
};


/**
 * @param {?proto.receipts.ReceiptScriptResult|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setScriptResult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.receipts.Receipt.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearScriptResult = function() {
  return this.setScriptResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasScriptResult = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional ReceiptMessageOut message_out = 17;
 * @return {?proto.receipts.ReceiptMessageOut}
 */
proto.receipts.Receipt.prototype.getMessageOut = function() {
  return /** @type{?proto.receipts.ReceiptMessageOut} */ (
    jspb.Message.getWrapperField(this, proto.receipts.ReceiptMessageOut, 17));
};


/**
 * @param {?proto.receipts.ReceiptMessageOut|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setMessageOut = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.receipts.Receipt.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearMessageOut = function() {
  return this.setMessageOut(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasMessageOut = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional ReceiptMint mint = 18;
 * @return {?proto.receipts.ReceiptMint}
 */
proto.receipts.Receipt.prototype.getMint = function() {
  return /** @type{?proto.receipts.ReceiptMint} */ (
    jspb.Message.getWrapperField(this, proto.receipts.ReceiptMint, 18));
};


/**
 * @param {?proto.receipts.ReceiptMint|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setMint = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.receipts.Receipt.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearMint = function() {
  return this.setMint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasMint = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ReceiptBurn burn = 19;
 * @return {?proto.receipts.ReceiptBurn}
 */
proto.receipts.Receipt.prototype.getBurn = function() {
  return /** @type{?proto.receipts.ReceiptBurn} */ (
    jspb.Message.getWrapperField(this, proto.receipts.ReceiptBurn, 19));
};


/**
 * @param {?proto.receipts.ReceiptBurn|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setBurn = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.receipts.Receipt.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearBurn = function() {
  return this.setBurn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasBurn = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 20;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.Receipt.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 20));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 21;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.Receipt.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 21));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional pointers.ReceiptPointer pointer = 22;
 * @return {?proto.pointers.ReceiptPointer}
 */
proto.receipts.Receipt.prototype.getPointer = function() {
  return /** @type{?proto.pointers.ReceiptPointer} */ (
    jspb.Message.getWrapperField(this, pointers_pb.ReceiptPointer, 22));
};


/**
 * @param {?proto.pointers.ReceiptPointer|undefined} value
 * @return {!proto.receipts.Receipt} returns this
*/
proto.receipts.Receipt.prototype.setPointer = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.Receipt} returns this
 */
proto.receipts.Receipt.prototype.clearPointer = function() {
  return this.setPointer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.Receipt.prototype.hasPointer = function() {
  return jspb.Message.getField(this, 22) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.ReceiptCall.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.ReceiptCall.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.ReceiptCall} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptCall.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txId: msg.getTxId_asB64(),
    contractId: msg.getContractId_asB64(),
    toContractId: msg.getToContractId_asB64(),
    amount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    assetId: msg.getAssetId_asB64(),
    gas: jspb.Message.getFieldWithDefault(msg, 7, 0),
    param1: jspb.Message.getFieldWithDefault(msg, 8, 0),
    param2: jspb.Message.getFieldWithDefault(msg, 9, 0),
    pc: jspb.Message.getFieldWithDefault(msg, 10, 0),
    is: jspb.Message.getFieldWithDefault(msg, 11, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.ReceiptCall}
 */
proto.receipts.ReceiptCall.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.ReceiptCall;
  return proto.receipts.ReceiptCall.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.ReceiptCall} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.ReceiptCall}
 */
proto.receipts.ReceiptCall.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractId(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setToContractId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAssetId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGas(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParam1(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParam2(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPc(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIs(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptCall.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.ReceiptCall.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.ReceiptCall} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptCall.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getToContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAssetId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getGas();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getParam1();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getParam2();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getPc();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getIs();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.ReceiptCall.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.ReceiptCall} returns this
 */
proto.receipts.ReceiptCall.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptCall.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_id = 2;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.ReceiptCall.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptCall.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptCall} returns this
 */
proto.receipts.ReceiptCall.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes contract_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptCall.prototype.getContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes contract_id = 3;
 * This is a type-conversion wrapper around `getContractId()`
 * @return {string}
 */
proto.receipts.ReceiptCall.prototype.getContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractId()));
};


/**
 * optional bytes contract_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptCall.prototype.getContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptCall} returns this
 */
proto.receipts.ReceiptCall.prototype.setContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes to_contract_id = 4;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptCall.prototype.getToContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes to_contract_id = 4;
 * This is a type-conversion wrapper around `getToContractId()`
 * @return {string}
 */
proto.receipts.ReceiptCall.prototype.getToContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getToContractId()));
};


/**
 * optional bytes to_contract_id = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getToContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptCall.prototype.getToContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getToContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptCall} returns this
 */
proto.receipts.ReceiptCall.prototype.setToContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 amount = 5;
 * @return {number}
 */
proto.receipts.ReceiptCall.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptCall} returns this
 */
proto.receipts.ReceiptCall.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes asset_id = 6;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptCall.prototype.getAssetId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes asset_id = 6;
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {string}
 */
proto.receipts.ReceiptCall.prototype.getAssetId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAssetId()));
};


/**
 * optional bytes asset_id = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptCall.prototype.getAssetId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAssetId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptCall} returns this
 */
proto.receipts.ReceiptCall.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional int64 gas = 7;
 * @return {number}
 */
proto.receipts.ReceiptCall.prototype.getGas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptCall} returns this
 */
proto.receipts.ReceiptCall.prototype.setGas = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 param1 = 8;
 * @return {number}
 */
proto.receipts.ReceiptCall.prototype.getParam1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptCall} returns this
 */
proto.receipts.ReceiptCall.prototype.setParam1 = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 param2 = 9;
 * @return {number}
 */
proto.receipts.ReceiptCall.prototype.getParam2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptCall} returns this
 */
proto.receipts.ReceiptCall.prototype.setParam2 = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 pc = 10;
 * @return {number}
 */
proto.receipts.ReceiptCall.prototype.getPc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptCall} returns this
 */
proto.receipts.ReceiptCall.prototype.setPc = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 is = 11;
 * @return {number}
 */
proto.receipts.ReceiptCall.prototype.getIs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptCall} returns this
 */
proto.receipts.ReceiptCall.prototype.setIs = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptCall.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptCall} returns this
*/
proto.receipts.ReceiptCall.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptCall} returns this
 */
proto.receipts.ReceiptCall.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptCall.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptCall.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptCall} returns this
*/
proto.receipts.ReceiptCall.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptCall} returns this
 */
proto.receipts.ReceiptCall.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptCall.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.ReceiptReturn.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.ReceiptReturn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.ReceiptReturn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptReturn.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txId: msg.getTxId_asB64(),
    contractId: msg.getContractId_asB64(),
    val: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pc: jspb.Message.getFieldWithDefault(msg, 5, 0),
    is: jspb.Message.getFieldWithDefault(msg, 6, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.ReceiptReturn}
 */
proto.receipts.ReceiptReturn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.ReceiptReturn;
  return proto.receipts.ReceiptReturn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.ReceiptReturn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.ReceiptReturn}
 */
proto.receipts.ReceiptReturn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVal(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPc(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIs(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptReturn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.ReceiptReturn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.ReceiptReturn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptReturn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getVal();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getPc();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getIs();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.ReceiptReturn.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.ReceiptReturn} returns this
 */
proto.receipts.ReceiptReturn.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptReturn.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_id = 2;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.ReceiptReturn.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptReturn.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptReturn} returns this
 */
proto.receipts.ReceiptReturn.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes contract_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptReturn.prototype.getContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes contract_id = 3;
 * This is a type-conversion wrapper around `getContractId()`
 * @return {string}
 */
proto.receipts.ReceiptReturn.prototype.getContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractId()));
};


/**
 * optional bytes contract_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptReturn.prototype.getContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptReturn} returns this
 */
proto.receipts.ReceiptReturn.prototype.setContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int64 val = 4;
 * @return {number}
 */
proto.receipts.ReceiptReturn.prototype.getVal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptReturn} returns this
 */
proto.receipts.ReceiptReturn.prototype.setVal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 pc = 5;
 * @return {number}
 */
proto.receipts.ReceiptReturn.prototype.getPc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptReturn} returns this
 */
proto.receipts.ReceiptReturn.prototype.setPc = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 is = 6;
 * @return {number}
 */
proto.receipts.ReceiptReturn.prototype.getIs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptReturn} returns this
 */
proto.receipts.ReceiptReturn.prototype.setIs = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptReturn.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptReturn} returns this
*/
proto.receipts.ReceiptReturn.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptReturn} returns this
 */
proto.receipts.ReceiptReturn.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptReturn.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptReturn.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptReturn} returns this
*/
proto.receipts.ReceiptReturn.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptReturn} returns this
 */
proto.receipts.ReceiptReturn.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptReturn.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.ReceiptReturnData.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.ReceiptReturnData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.ReceiptReturnData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptReturnData.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txId: msg.getTxId_asB64(),
    contractId: msg.getContractId_asB64(),
    ptr: jspb.Message.getFieldWithDefault(msg, 4, 0),
    len: jspb.Message.getFieldWithDefault(msg, 5, 0),
    digest: msg.getDigest_asB64(),
    pc: jspb.Message.getFieldWithDefault(msg, 7, 0),
    is: jspb.Message.getFieldWithDefault(msg, 8, 0),
    data: msg.getData_asB64(),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.ReceiptReturnData}
 */
proto.receipts.ReceiptReturnData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.ReceiptReturnData;
  return proto.receipts.ReceiptReturnData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.ReceiptReturnData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.ReceiptReturnData}
 */
proto.receipts.ReceiptReturnData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPtr(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLen(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDigest(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPc(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIs(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptReturnData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.ReceiptReturnData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.ReceiptReturnData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptReturnData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getPtr();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getLen();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getDigest_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getPc();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getIs();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.ReceiptReturnData.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.ReceiptReturnData} returns this
 */
proto.receipts.ReceiptReturnData.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptReturnData.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_id = 2;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.ReceiptReturnData.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptReturnData.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptReturnData} returns this
 */
proto.receipts.ReceiptReturnData.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes contract_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptReturnData.prototype.getContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes contract_id = 3;
 * This is a type-conversion wrapper around `getContractId()`
 * @return {string}
 */
proto.receipts.ReceiptReturnData.prototype.getContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractId()));
};


/**
 * optional bytes contract_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptReturnData.prototype.getContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptReturnData} returns this
 */
proto.receipts.ReceiptReturnData.prototype.setContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int64 ptr = 4;
 * @return {number}
 */
proto.receipts.ReceiptReturnData.prototype.getPtr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptReturnData} returns this
 */
proto.receipts.ReceiptReturnData.prototype.setPtr = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 len = 5;
 * @return {number}
 */
proto.receipts.ReceiptReturnData.prototype.getLen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptReturnData} returns this
 */
proto.receipts.ReceiptReturnData.prototype.setLen = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes digest = 6;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptReturnData.prototype.getDigest = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes digest = 6;
 * This is a type-conversion wrapper around `getDigest()`
 * @return {string}
 */
proto.receipts.ReceiptReturnData.prototype.getDigest_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDigest()));
};


/**
 * optional bytes digest = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDigest()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptReturnData.prototype.getDigest_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDigest()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptReturnData} returns this
 */
proto.receipts.ReceiptReturnData.prototype.setDigest = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional int64 pc = 7;
 * @return {number}
 */
proto.receipts.ReceiptReturnData.prototype.getPc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptReturnData} returns this
 */
proto.receipts.ReceiptReturnData.prototype.setPc = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 is = 8;
 * @return {number}
 */
proto.receipts.ReceiptReturnData.prototype.getIs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptReturnData} returns this
 */
proto.receipts.ReceiptReturnData.prototype.setIs = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bytes data = 9;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptReturnData.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes data = 9;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.receipts.ReceiptReturnData.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptReturnData.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptReturnData} returns this
 */
proto.receipts.ReceiptReturnData.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 9, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptReturnData.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptReturnData} returns this
*/
proto.receipts.ReceiptReturnData.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptReturnData} returns this
 */
proto.receipts.ReceiptReturnData.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptReturnData.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptReturnData.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptReturnData} returns this
*/
proto.receipts.ReceiptReturnData.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptReturnData} returns this
 */
proto.receipts.ReceiptReturnData.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptReturnData.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.ReceiptPanic.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.ReceiptPanic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.ReceiptPanic} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptPanic.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txId: msg.getTxId_asB64(),
    contractId: msg.getContractId_asB64(),
    reason: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pc: jspb.Message.getFieldWithDefault(msg, 5, 0),
    is: jspb.Message.getFieldWithDefault(msg, 6, 0),
    panicContractId: msg.getPanicContractId_asB64(),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.ReceiptPanic}
 */
proto.receipts.ReceiptPanic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.ReceiptPanic;
  return proto.receipts.ReceiptPanic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.ReceiptPanic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.ReceiptPanic}
 */
proto.receipts.ReceiptPanic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReason(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPc(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIs(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPanicContractId(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptPanic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.ReceiptPanic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.ReceiptPanic} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptPanic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getReason();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getPc();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getIs();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getPanicContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.ReceiptPanic.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.ReceiptPanic} returns this
 */
proto.receipts.ReceiptPanic.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptPanic.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_id = 2;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.ReceiptPanic.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptPanic.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptPanic} returns this
 */
proto.receipts.ReceiptPanic.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes contract_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptPanic.prototype.getContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes contract_id = 3;
 * This is a type-conversion wrapper around `getContractId()`
 * @return {string}
 */
proto.receipts.ReceiptPanic.prototype.getContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractId()));
};


/**
 * optional bytes contract_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptPanic.prototype.getContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptPanic} returns this
 */
proto.receipts.ReceiptPanic.prototype.setContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int64 reason = 4;
 * @return {number}
 */
proto.receipts.ReceiptPanic.prototype.getReason = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptPanic} returns this
 */
proto.receipts.ReceiptPanic.prototype.setReason = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 pc = 5;
 * @return {number}
 */
proto.receipts.ReceiptPanic.prototype.getPc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptPanic} returns this
 */
proto.receipts.ReceiptPanic.prototype.setPc = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 is = 6;
 * @return {number}
 */
proto.receipts.ReceiptPanic.prototype.getIs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptPanic} returns this
 */
proto.receipts.ReceiptPanic.prototype.setIs = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bytes panic_contract_id = 7;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptPanic.prototype.getPanicContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes panic_contract_id = 7;
 * This is a type-conversion wrapper around `getPanicContractId()`
 * @return {string}
 */
proto.receipts.ReceiptPanic.prototype.getPanicContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPanicContractId()));
};


/**
 * optional bytes panic_contract_id = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPanicContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptPanic.prototype.getPanicContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPanicContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptPanic} returns this
 */
proto.receipts.ReceiptPanic.prototype.setPanicContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptPanic.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptPanic} returns this
*/
proto.receipts.ReceiptPanic.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptPanic} returns this
 */
proto.receipts.ReceiptPanic.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptPanic.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptPanic.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptPanic} returns this
*/
proto.receipts.ReceiptPanic.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptPanic} returns this
 */
proto.receipts.ReceiptPanic.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptPanic.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.ReceiptRevert.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.ReceiptRevert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.ReceiptRevert} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptRevert.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txId: msg.getTxId_asB64(),
    contractId: msg.getContractId_asB64(),
    val: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pc: jspb.Message.getFieldWithDefault(msg, 5, 0),
    is: jspb.Message.getFieldWithDefault(msg, 6, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.ReceiptRevert}
 */
proto.receipts.ReceiptRevert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.ReceiptRevert;
  return proto.receipts.ReceiptRevert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.ReceiptRevert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.ReceiptRevert}
 */
proto.receipts.ReceiptRevert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVal(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPc(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIs(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptRevert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.ReceiptRevert.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.ReceiptRevert} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptRevert.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getVal();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getPc();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getIs();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.ReceiptRevert.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.ReceiptRevert} returns this
 */
proto.receipts.ReceiptRevert.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptRevert.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_id = 2;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.ReceiptRevert.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptRevert.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptRevert} returns this
 */
proto.receipts.ReceiptRevert.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes contract_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptRevert.prototype.getContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes contract_id = 3;
 * This is a type-conversion wrapper around `getContractId()`
 * @return {string}
 */
proto.receipts.ReceiptRevert.prototype.getContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractId()));
};


/**
 * optional bytes contract_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptRevert.prototype.getContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptRevert} returns this
 */
proto.receipts.ReceiptRevert.prototype.setContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int64 val = 4;
 * @return {number}
 */
proto.receipts.ReceiptRevert.prototype.getVal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptRevert} returns this
 */
proto.receipts.ReceiptRevert.prototype.setVal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 pc = 5;
 * @return {number}
 */
proto.receipts.ReceiptRevert.prototype.getPc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptRevert} returns this
 */
proto.receipts.ReceiptRevert.prototype.setPc = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 is = 6;
 * @return {number}
 */
proto.receipts.ReceiptRevert.prototype.getIs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptRevert} returns this
 */
proto.receipts.ReceiptRevert.prototype.setIs = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptRevert.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptRevert} returns this
*/
proto.receipts.ReceiptRevert.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptRevert} returns this
 */
proto.receipts.ReceiptRevert.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptRevert.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptRevert.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptRevert} returns this
*/
proto.receipts.ReceiptRevert.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptRevert} returns this
 */
proto.receipts.ReceiptRevert.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptRevert.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.ReceiptLog.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.ReceiptLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.ReceiptLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txId: msg.getTxId_asB64(),
    contractId: msg.getContractId_asB64(),
    ra: jspb.Message.getFieldWithDefault(msg, 4, 0),
    rb: jspb.Message.getFieldWithDefault(msg, 5, 0),
    rc: jspb.Message.getFieldWithDefault(msg, 6, 0),
    rd: jspb.Message.getFieldWithDefault(msg, 7, 0),
    pc: jspb.Message.getFieldWithDefault(msg, 8, 0),
    is: jspb.Message.getFieldWithDefault(msg, 9, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.ReceiptLog}
 */
proto.receipts.ReceiptLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.ReceiptLog;
  return proto.receipts.ReceiptLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.ReceiptLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.ReceiptLog}
 */
proto.receipts.ReceiptLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRa(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRb(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRc(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRd(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPc(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIs(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.ReceiptLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.ReceiptLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getRa();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getRb();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getRc();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getRd();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getPc();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getIs();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.ReceiptLog.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.ReceiptLog} returns this
 */
proto.receipts.ReceiptLog.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptLog.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_id = 2;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.ReceiptLog.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptLog.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptLog} returns this
 */
proto.receipts.ReceiptLog.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes contract_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptLog.prototype.getContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes contract_id = 3;
 * This is a type-conversion wrapper around `getContractId()`
 * @return {string}
 */
proto.receipts.ReceiptLog.prototype.getContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractId()));
};


/**
 * optional bytes contract_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptLog.prototype.getContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptLog} returns this
 */
proto.receipts.ReceiptLog.prototype.setContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int64 ra = 4;
 * @return {number}
 */
proto.receipts.ReceiptLog.prototype.getRa = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptLog} returns this
 */
proto.receipts.ReceiptLog.prototype.setRa = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 rb = 5;
 * @return {number}
 */
proto.receipts.ReceiptLog.prototype.getRb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptLog} returns this
 */
proto.receipts.ReceiptLog.prototype.setRb = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 rc = 6;
 * @return {number}
 */
proto.receipts.ReceiptLog.prototype.getRc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptLog} returns this
 */
proto.receipts.ReceiptLog.prototype.setRc = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 rd = 7;
 * @return {number}
 */
proto.receipts.ReceiptLog.prototype.getRd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptLog} returns this
 */
proto.receipts.ReceiptLog.prototype.setRd = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 pc = 8;
 * @return {number}
 */
proto.receipts.ReceiptLog.prototype.getPc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptLog} returns this
 */
proto.receipts.ReceiptLog.prototype.setPc = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 is = 9;
 * @return {number}
 */
proto.receipts.ReceiptLog.prototype.getIs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptLog} returns this
 */
proto.receipts.ReceiptLog.prototype.setIs = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptLog.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptLog} returns this
*/
proto.receipts.ReceiptLog.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptLog} returns this
 */
proto.receipts.ReceiptLog.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptLog.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptLog.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptLog} returns this
*/
proto.receipts.ReceiptLog.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptLog} returns this
 */
proto.receipts.ReceiptLog.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptLog.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.ReceiptLogData.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.ReceiptLogData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.ReceiptLogData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptLogData.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txId: msg.getTxId_asB64(),
    contractId: msg.getContractId_asB64(),
    ra: jspb.Message.getFieldWithDefault(msg, 4, 0),
    rb: jspb.Message.getFieldWithDefault(msg, 5, 0),
    ptr: jspb.Message.getFieldWithDefault(msg, 6, 0),
    len: jspb.Message.getFieldWithDefault(msg, 7, 0),
    digest: msg.getDigest_asB64(),
    pc: jspb.Message.getFieldWithDefault(msg, 9, 0),
    is: jspb.Message.getFieldWithDefault(msg, 10, 0),
    data: msg.getData_asB64(),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.ReceiptLogData}
 */
proto.receipts.ReceiptLogData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.ReceiptLogData;
  return proto.receipts.ReceiptLogData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.ReceiptLogData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.ReceiptLogData}
 */
proto.receipts.ReceiptLogData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRa(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRb(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPtr(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLen(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDigest(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPc(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIs(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptLogData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.ReceiptLogData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.ReceiptLogData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptLogData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getRa();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getRb();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getPtr();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getLen();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getDigest_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = message.getPc();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getIs();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.ReceiptLogData.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.ReceiptLogData} returns this
 */
proto.receipts.ReceiptLogData.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptLogData.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_id = 2;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.ReceiptLogData.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptLogData.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptLogData} returns this
 */
proto.receipts.ReceiptLogData.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes contract_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptLogData.prototype.getContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes contract_id = 3;
 * This is a type-conversion wrapper around `getContractId()`
 * @return {string}
 */
proto.receipts.ReceiptLogData.prototype.getContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractId()));
};


/**
 * optional bytes contract_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptLogData.prototype.getContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptLogData} returns this
 */
proto.receipts.ReceiptLogData.prototype.setContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int64 ra = 4;
 * @return {number}
 */
proto.receipts.ReceiptLogData.prototype.getRa = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptLogData} returns this
 */
proto.receipts.ReceiptLogData.prototype.setRa = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 rb = 5;
 * @return {number}
 */
proto.receipts.ReceiptLogData.prototype.getRb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptLogData} returns this
 */
proto.receipts.ReceiptLogData.prototype.setRb = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 ptr = 6;
 * @return {number}
 */
proto.receipts.ReceiptLogData.prototype.getPtr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptLogData} returns this
 */
proto.receipts.ReceiptLogData.prototype.setPtr = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 len = 7;
 * @return {number}
 */
proto.receipts.ReceiptLogData.prototype.getLen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptLogData} returns this
 */
proto.receipts.ReceiptLogData.prototype.setLen = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bytes digest = 8;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptLogData.prototype.getDigest = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes digest = 8;
 * This is a type-conversion wrapper around `getDigest()`
 * @return {string}
 */
proto.receipts.ReceiptLogData.prototype.getDigest_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDigest()));
};


/**
 * optional bytes digest = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDigest()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptLogData.prototype.getDigest_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDigest()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptLogData} returns this
 */
proto.receipts.ReceiptLogData.prototype.setDigest = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};


/**
 * optional int64 pc = 9;
 * @return {number}
 */
proto.receipts.ReceiptLogData.prototype.getPc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptLogData} returns this
 */
proto.receipts.ReceiptLogData.prototype.setPc = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 is = 10;
 * @return {number}
 */
proto.receipts.ReceiptLogData.prototype.getIs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptLogData} returns this
 */
proto.receipts.ReceiptLogData.prototype.setIs = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bytes data = 11;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptLogData.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes data = 11;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.receipts.ReceiptLogData.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptLogData.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptLogData} returns this
 */
proto.receipts.ReceiptLogData.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 11, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptLogData.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptLogData} returns this
*/
proto.receipts.ReceiptLogData.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptLogData} returns this
 */
proto.receipts.ReceiptLogData.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptLogData.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptLogData.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptLogData} returns this
*/
proto.receipts.ReceiptLogData.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptLogData} returns this
 */
proto.receipts.ReceiptLogData.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptLogData.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.ReceiptTransfer.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.ReceiptTransfer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.ReceiptTransfer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptTransfer.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txId: msg.getTxId_asB64(),
    contractId: msg.getContractId_asB64(),
    toContractId: msg.getToContractId_asB64(),
    amount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    assetId: msg.getAssetId_asB64(),
    pc: jspb.Message.getFieldWithDefault(msg, 7, 0),
    is: jspb.Message.getFieldWithDefault(msg, 8, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.ReceiptTransfer}
 */
proto.receipts.ReceiptTransfer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.ReceiptTransfer;
  return proto.receipts.ReceiptTransfer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.ReceiptTransfer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.ReceiptTransfer}
 */
proto.receipts.ReceiptTransfer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractId(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setToContractId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAssetId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPc(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIs(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptTransfer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.ReceiptTransfer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.ReceiptTransfer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptTransfer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getToContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAssetId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getPc();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getIs();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.ReceiptTransfer.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.ReceiptTransfer} returns this
 */
proto.receipts.ReceiptTransfer.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptTransfer.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_id = 2;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.ReceiptTransfer.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptTransfer.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptTransfer} returns this
 */
proto.receipts.ReceiptTransfer.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes contract_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptTransfer.prototype.getContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes contract_id = 3;
 * This is a type-conversion wrapper around `getContractId()`
 * @return {string}
 */
proto.receipts.ReceiptTransfer.prototype.getContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractId()));
};


/**
 * optional bytes contract_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptTransfer.prototype.getContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptTransfer} returns this
 */
proto.receipts.ReceiptTransfer.prototype.setContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes to_contract_id = 4;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptTransfer.prototype.getToContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes to_contract_id = 4;
 * This is a type-conversion wrapper around `getToContractId()`
 * @return {string}
 */
proto.receipts.ReceiptTransfer.prototype.getToContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getToContractId()));
};


/**
 * optional bytes to_contract_id = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getToContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptTransfer.prototype.getToContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getToContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptTransfer} returns this
 */
proto.receipts.ReceiptTransfer.prototype.setToContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 amount = 5;
 * @return {number}
 */
proto.receipts.ReceiptTransfer.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptTransfer} returns this
 */
proto.receipts.ReceiptTransfer.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes asset_id = 6;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptTransfer.prototype.getAssetId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes asset_id = 6;
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {string}
 */
proto.receipts.ReceiptTransfer.prototype.getAssetId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAssetId()));
};


/**
 * optional bytes asset_id = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptTransfer.prototype.getAssetId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAssetId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptTransfer} returns this
 */
proto.receipts.ReceiptTransfer.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional int64 pc = 7;
 * @return {number}
 */
proto.receipts.ReceiptTransfer.prototype.getPc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptTransfer} returns this
 */
proto.receipts.ReceiptTransfer.prototype.setPc = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 is = 8;
 * @return {number}
 */
proto.receipts.ReceiptTransfer.prototype.getIs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptTransfer} returns this
 */
proto.receipts.ReceiptTransfer.prototype.setIs = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptTransfer.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptTransfer} returns this
*/
proto.receipts.ReceiptTransfer.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptTransfer} returns this
 */
proto.receipts.ReceiptTransfer.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptTransfer.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptTransfer.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptTransfer} returns this
*/
proto.receipts.ReceiptTransfer.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptTransfer} returns this
 */
proto.receipts.ReceiptTransfer.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptTransfer.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.ReceiptTransferOut.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.ReceiptTransferOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.ReceiptTransferOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptTransferOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txId: msg.getTxId_asB64(),
    contractId: msg.getContractId_asB64(),
    toAddress: msg.getToAddress_asB64(),
    amount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    assetId: msg.getAssetId_asB64(),
    pc: jspb.Message.getFieldWithDefault(msg, 7, 0),
    is: jspb.Message.getFieldWithDefault(msg, 8, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.ReceiptTransferOut}
 */
proto.receipts.ReceiptTransferOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.ReceiptTransferOut;
  return proto.receipts.ReceiptTransferOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.ReceiptTransferOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.ReceiptTransferOut}
 */
proto.receipts.ReceiptTransferOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractId(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setToAddress(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAssetId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPc(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIs(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptTransferOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.ReceiptTransferOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.ReceiptTransferOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptTransferOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getToAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAssetId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getPc();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getIs();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.ReceiptTransferOut.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.ReceiptTransferOut} returns this
 */
proto.receipts.ReceiptTransferOut.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptTransferOut.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_id = 2;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.ReceiptTransferOut.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptTransferOut.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptTransferOut} returns this
 */
proto.receipts.ReceiptTransferOut.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes contract_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptTransferOut.prototype.getContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes contract_id = 3;
 * This is a type-conversion wrapper around `getContractId()`
 * @return {string}
 */
proto.receipts.ReceiptTransferOut.prototype.getContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractId()));
};


/**
 * optional bytes contract_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptTransferOut.prototype.getContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptTransferOut} returns this
 */
proto.receipts.ReceiptTransferOut.prototype.setContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes to_address = 4;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptTransferOut.prototype.getToAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes to_address = 4;
 * This is a type-conversion wrapper around `getToAddress()`
 * @return {string}
 */
proto.receipts.ReceiptTransferOut.prototype.getToAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getToAddress()));
};


/**
 * optional bytes to_address = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getToAddress()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptTransferOut.prototype.getToAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getToAddress()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptTransferOut} returns this
 */
proto.receipts.ReceiptTransferOut.prototype.setToAddress = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 amount = 5;
 * @return {number}
 */
proto.receipts.ReceiptTransferOut.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptTransferOut} returns this
 */
proto.receipts.ReceiptTransferOut.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes asset_id = 6;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptTransferOut.prototype.getAssetId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes asset_id = 6;
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {string}
 */
proto.receipts.ReceiptTransferOut.prototype.getAssetId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAssetId()));
};


/**
 * optional bytes asset_id = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptTransferOut.prototype.getAssetId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAssetId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptTransferOut} returns this
 */
proto.receipts.ReceiptTransferOut.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional int64 pc = 7;
 * @return {number}
 */
proto.receipts.ReceiptTransferOut.prototype.getPc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptTransferOut} returns this
 */
proto.receipts.ReceiptTransferOut.prototype.setPc = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 is = 8;
 * @return {number}
 */
proto.receipts.ReceiptTransferOut.prototype.getIs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptTransferOut} returns this
 */
proto.receipts.ReceiptTransferOut.prototype.setIs = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptTransferOut.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptTransferOut} returns this
*/
proto.receipts.ReceiptTransferOut.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptTransferOut} returns this
 */
proto.receipts.ReceiptTransferOut.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptTransferOut.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptTransferOut.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptTransferOut} returns this
*/
proto.receipts.ReceiptTransferOut.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptTransferOut} returns this
 */
proto.receipts.ReceiptTransferOut.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptTransferOut.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.ReceiptScriptResult.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.ReceiptScriptResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.ReceiptScriptResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptScriptResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txId: msg.getTxId_asB64(),
    result: jspb.Message.getFieldWithDefault(msg, 3, 0),
    gasUsed: jspb.Message.getFieldWithDefault(msg, 4, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.ReceiptScriptResult}
 */
proto.receipts.ReceiptScriptResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.ReceiptScriptResult;
  return proto.receipts.ReceiptScriptResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.ReceiptScriptResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.ReceiptScriptResult}
 */
proto.receipts.ReceiptScriptResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 3:
      var value = /** @type {!proto.receipts.ScriptResultType} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGasUsed(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptScriptResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.ReceiptScriptResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.ReceiptScriptResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptScriptResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getGasUsed();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.ReceiptScriptResult.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.ReceiptScriptResult} returns this
 */
proto.receipts.ReceiptScriptResult.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptScriptResult.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_id = 2;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.ReceiptScriptResult.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptScriptResult.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptScriptResult} returns this
 */
proto.receipts.ReceiptScriptResult.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional ScriptResultType result = 3;
 * @return {!proto.receipts.ScriptResultType}
 */
proto.receipts.ReceiptScriptResult.prototype.getResult = function() {
  return /** @type {!proto.receipts.ScriptResultType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.receipts.ScriptResultType} value
 * @return {!proto.receipts.ReceiptScriptResult} returns this
 */
proto.receipts.ReceiptScriptResult.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int64 gas_used = 4;
 * @return {number}
 */
proto.receipts.ReceiptScriptResult.prototype.getGasUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptScriptResult} returns this
 */
proto.receipts.ReceiptScriptResult.prototype.setGasUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptScriptResult.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptScriptResult} returns this
*/
proto.receipts.ReceiptScriptResult.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptScriptResult} returns this
 */
proto.receipts.ReceiptScriptResult.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptScriptResult.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptScriptResult.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptScriptResult} returns this
*/
proto.receipts.ReceiptScriptResult.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptScriptResult} returns this
 */
proto.receipts.ReceiptScriptResult.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptScriptResult.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.ReceiptMessageOut.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.ReceiptMessageOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.ReceiptMessageOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptMessageOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txId: msg.getTxId_asB64(),
    senderAddress: msg.getSenderAddress_asB64(),
    recipientAddress: msg.getRecipientAddress_asB64(),
    amount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    nonce: msg.getNonce_asB64(),
    len: jspb.Message.getFieldWithDefault(msg, 7, 0),
    digest: msg.getDigest_asB64(),
    data: msg.getData_asB64(),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.ReceiptMessageOut}
 */
proto.receipts.ReceiptMessageOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.ReceiptMessageOut;
  return proto.receipts.ReceiptMessageOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.ReceiptMessageOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.ReceiptMessageOut}
 */
proto.receipts.ReceiptMessageOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSenderAddress(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRecipientAddress(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNonce(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLen(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDigest(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptMessageOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.ReceiptMessageOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.ReceiptMessageOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptMessageOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSenderAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getRecipientAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getNonce_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getLen();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getDigest_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.ReceiptMessageOut.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.ReceiptMessageOut} returns this
 */
proto.receipts.ReceiptMessageOut.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptMessageOut.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_id = 2;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.ReceiptMessageOut.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptMessageOut.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptMessageOut} returns this
 */
proto.receipts.ReceiptMessageOut.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes sender_address = 3;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptMessageOut.prototype.getSenderAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes sender_address = 3;
 * This is a type-conversion wrapper around `getSenderAddress()`
 * @return {string}
 */
proto.receipts.ReceiptMessageOut.prototype.getSenderAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSenderAddress()));
};


/**
 * optional bytes sender_address = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSenderAddress()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptMessageOut.prototype.getSenderAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSenderAddress()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptMessageOut} returns this
 */
proto.receipts.ReceiptMessageOut.prototype.setSenderAddress = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes recipient_address = 4;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptMessageOut.prototype.getRecipientAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes recipient_address = 4;
 * This is a type-conversion wrapper around `getRecipientAddress()`
 * @return {string}
 */
proto.receipts.ReceiptMessageOut.prototype.getRecipientAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRecipientAddress()));
};


/**
 * optional bytes recipient_address = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRecipientAddress()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptMessageOut.prototype.getRecipientAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRecipientAddress()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptMessageOut} returns this
 */
proto.receipts.ReceiptMessageOut.prototype.setRecipientAddress = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 amount = 5;
 * @return {number}
 */
proto.receipts.ReceiptMessageOut.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptMessageOut} returns this
 */
proto.receipts.ReceiptMessageOut.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes nonce = 6;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptMessageOut.prototype.getNonce = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes nonce = 6;
 * This is a type-conversion wrapper around `getNonce()`
 * @return {string}
 */
proto.receipts.ReceiptMessageOut.prototype.getNonce_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNonce()));
};


/**
 * optional bytes nonce = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNonce()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptMessageOut.prototype.getNonce_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNonce()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptMessageOut} returns this
 */
proto.receipts.ReceiptMessageOut.prototype.setNonce = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional int64 len = 7;
 * @return {number}
 */
proto.receipts.ReceiptMessageOut.prototype.getLen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptMessageOut} returns this
 */
proto.receipts.ReceiptMessageOut.prototype.setLen = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bytes digest = 8;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptMessageOut.prototype.getDigest = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes digest = 8;
 * This is a type-conversion wrapper around `getDigest()`
 * @return {string}
 */
proto.receipts.ReceiptMessageOut.prototype.getDigest_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDigest()));
};


/**
 * optional bytes digest = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDigest()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptMessageOut.prototype.getDigest_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDigest()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptMessageOut} returns this
 */
proto.receipts.ReceiptMessageOut.prototype.setDigest = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};


/**
 * optional bytes data = 9;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptMessageOut.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes data = 9;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.receipts.ReceiptMessageOut.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptMessageOut.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptMessageOut} returns this
 */
proto.receipts.ReceiptMessageOut.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 9, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptMessageOut.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptMessageOut} returns this
*/
proto.receipts.ReceiptMessageOut.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptMessageOut} returns this
 */
proto.receipts.ReceiptMessageOut.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptMessageOut.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptMessageOut.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptMessageOut} returns this
*/
proto.receipts.ReceiptMessageOut.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptMessageOut} returns this
 */
proto.receipts.ReceiptMessageOut.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptMessageOut.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.ReceiptMint.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.ReceiptMint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.ReceiptMint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptMint.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txId: msg.getTxId_asB64(),
    subId: msg.getSubId_asB64(),
    contractId: msg.getContractId_asB64(),
    assetId: msg.getAssetId_asB64(),
    val: jspb.Message.getFieldWithDefault(msg, 6, 0),
    pc: jspb.Message.getFieldWithDefault(msg, 7, 0),
    is: jspb.Message.getFieldWithDefault(msg, 8, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.ReceiptMint}
 */
proto.receipts.ReceiptMint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.ReceiptMint;
  return proto.receipts.ReceiptMint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.ReceiptMint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.ReceiptMint}
 */
proto.receipts.ReceiptMint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSubId(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractId(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAssetId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVal(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPc(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIs(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptMint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.ReceiptMint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.ReceiptMint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptMint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSubId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAssetId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getVal();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getPc();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getIs();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.ReceiptMint.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.ReceiptMint} returns this
 */
proto.receipts.ReceiptMint.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptMint.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_id = 2;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.ReceiptMint.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptMint.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptMint} returns this
 */
proto.receipts.ReceiptMint.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes sub_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptMint.prototype.getSubId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes sub_id = 3;
 * This is a type-conversion wrapper around `getSubId()`
 * @return {string}
 */
proto.receipts.ReceiptMint.prototype.getSubId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSubId()));
};


/**
 * optional bytes sub_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSubId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptMint.prototype.getSubId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSubId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptMint} returns this
 */
proto.receipts.ReceiptMint.prototype.setSubId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes contract_id = 4;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptMint.prototype.getContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes contract_id = 4;
 * This is a type-conversion wrapper around `getContractId()`
 * @return {string}
 */
proto.receipts.ReceiptMint.prototype.getContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractId()));
};


/**
 * optional bytes contract_id = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptMint.prototype.getContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptMint} returns this
 */
proto.receipts.ReceiptMint.prototype.setContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes asset_id = 5;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptMint.prototype.getAssetId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes asset_id = 5;
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {string}
 */
proto.receipts.ReceiptMint.prototype.getAssetId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAssetId()));
};


/**
 * optional bytes asset_id = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptMint.prototype.getAssetId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAssetId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptMint} returns this
 */
proto.receipts.ReceiptMint.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional int64 val = 6;
 * @return {number}
 */
proto.receipts.ReceiptMint.prototype.getVal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptMint} returns this
 */
proto.receipts.ReceiptMint.prototype.setVal = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 pc = 7;
 * @return {number}
 */
proto.receipts.ReceiptMint.prototype.getPc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptMint} returns this
 */
proto.receipts.ReceiptMint.prototype.setPc = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 is = 8;
 * @return {number}
 */
proto.receipts.ReceiptMint.prototype.getIs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptMint} returns this
 */
proto.receipts.ReceiptMint.prototype.setIs = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptMint.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptMint} returns this
*/
proto.receipts.ReceiptMint.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptMint} returns this
 */
proto.receipts.ReceiptMint.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptMint.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptMint.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptMint} returns this
*/
proto.receipts.ReceiptMint.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptMint} returns this
 */
proto.receipts.ReceiptMint.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptMint.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.receipts.ReceiptBurn.prototype.toObject = function(opt_includeInstance) {
  return proto.receipts.ReceiptBurn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.receipts.ReceiptBurn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptBurn.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txId: msg.getTxId_asB64(),
    subId: msg.getSubId_asB64(),
    contractId: msg.getContractId_asB64(),
    assetId: msg.getAssetId_asB64(),
    val: jspb.Message.getFieldWithDefault(msg, 6, 0),
    pc: jspb.Message.getFieldWithDefault(msg, 7, 0),
    is: jspb.Message.getFieldWithDefault(msg, 8, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    publishedAt: (f = msg.getPublishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.receipts.ReceiptBurn}
 */
proto.receipts.ReceiptBurn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.receipts.ReceiptBurn;
  return proto.receipts.ReceiptBurn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.receipts.ReceiptBurn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.receipts.ReceiptBurn}
 */
proto.receipts.ReceiptBurn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSubId(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractId(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAssetId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVal(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPc(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIs(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublishedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptBurn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.receipts.ReceiptBurn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.receipts.ReceiptBurn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.receipts.ReceiptBurn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSubId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getContractId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAssetId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getVal();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getPc();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getIs();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPublishedAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.receipts.ReceiptBurn.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.receipts.ReceiptBurn} returns this
 */
proto.receipts.ReceiptBurn.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptBurn.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_id = 2;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.receipts.ReceiptBurn.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptBurn.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptBurn} returns this
 */
proto.receipts.ReceiptBurn.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes sub_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptBurn.prototype.getSubId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes sub_id = 3;
 * This is a type-conversion wrapper around `getSubId()`
 * @return {string}
 */
proto.receipts.ReceiptBurn.prototype.getSubId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSubId()));
};


/**
 * optional bytes sub_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSubId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptBurn.prototype.getSubId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSubId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptBurn} returns this
 */
proto.receipts.ReceiptBurn.prototype.setSubId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes contract_id = 4;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptBurn.prototype.getContractId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes contract_id = 4;
 * This is a type-conversion wrapper around `getContractId()`
 * @return {string}
 */
proto.receipts.ReceiptBurn.prototype.getContractId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractId()));
};


/**
 * optional bytes contract_id = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptBurn.prototype.getContractId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptBurn} returns this
 */
proto.receipts.ReceiptBurn.prototype.setContractId = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes asset_id = 5;
 * @return {!(string|Uint8Array)}
 */
proto.receipts.ReceiptBurn.prototype.getAssetId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes asset_id = 5;
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {string}
 */
proto.receipts.ReceiptBurn.prototype.getAssetId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAssetId()));
};


/**
 * optional bytes asset_id = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {!Uint8Array}
 */
proto.receipts.ReceiptBurn.prototype.getAssetId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAssetId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.receipts.ReceiptBurn} returns this
 */
proto.receipts.ReceiptBurn.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional int64 val = 6;
 * @return {number}
 */
proto.receipts.ReceiptBurn.prototype.getVal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptBurn} returns this
 */
proto.receipts.ReceiptBurn.prototype.setVal = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 pc = 7;
 * @return {number}
 */
proto.receipts.ReceiptBurn.prototype.getPc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptBurn} returns this
 */
proto.receipts.ReceiptBurn.prototype.setPc = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 is = 8;
 * @return {number}
 */
proto.receipts.ReceiptBurn.prototype.getIs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.receipts.ReceiptBurn} returns this
 */
proto.receipts.ReceiptBurn.prototype.setIs = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptBurn.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptBurn} returns this
*/
proto.receipts.ReceiptBurn.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptBurn} returns this
 */
proto.receipts.ReceiptBurn.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptBurn.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp published_at = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.receipts.ReceiptBurn.prototype.getPublishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.receipts.ReceiptBurn} returns this
*/
proto.receipts.ReceiptBurn.prototype.setPublishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.receipts.ReceiptBurn} returns this
 */
proto.receipts.ReceiptBurn.prototype.clearPublishedAt = function() {
  return this.setPublishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.receipts.ReceiptBurn.prototype.hasPublishedAt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * @enum {number}
 */
proto.receipts.ReceiptType = {
  CALL: 0,
  RETURN: 1,
  RETURN_DATA: 2,
  PANIC: 3,
  REVERT: 4,
  LOG: 5,
  LOG_DATA: 6,
  TRANSFER: 7,
  TRANSFER_OUT: 8,
  SCRIPT_RESULT: 9,
  MESSAGE_OUT: 10,
  MINT: 11,
  BURN: 12
};

/**
 * @enum {number}
 */
proto.receipts.ScriptResultType = {
  SUCCESS: 0,
  FAILURE: 1
};

goog.object.extend(exports, proto.receipts);
