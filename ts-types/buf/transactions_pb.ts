// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file transactions.proto (package transactions, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Metadata } from "./common_pb";
import { file_common } from "./common_pb";
import type { TxPointer } from "./pointers_pb";
import { file_pointers } from "./pointers_pb";
import type { Input, InputContract } from "./inputs_pb";
import { file_inputs } from "./inputs_pb";
import type { Output, OutputContract } from "./outputs_pb";
import { file_outputs } from "./outputs_pb";
import { file_receipts } from "./receipts_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file transactions.proto.
 */
export const file_transactions: GenFile = /*@__PURE__*/
  fileDesc("ChJ0cmFuc2FjdGlvbnMucHJvdG8SDHRyYW5zYWN0aW9ucyL6CAoLVHJhbnNhY3Rpb24SDwoHc3ViamVjdBgBIAEoCRIKCgJpZBgCIAEoDBIYChBzY3JpcHRfZ2FzX2xpbWl0GAMgASgDEicKCnR4X3BvaW50ZXIYBCABKAsyEy5wb2ludGVycy5UeFBvaW50ZXISFwoPaW5wdXRfYXNzZXRfaWRzGAUgAygMEhcKD2lucHV0X2NvbnRyYWN0cxgGIAMoDBItCg5pbnB1dF9jb250cmFjdBgHIAEoCzIVLmlucHV0cy5JbnB1dENvbnRyYWN0Eh0KBmlucHV0cxgIIAMoCzINLmlucHV0cy5JbnB1dBIRCglpc19zY3JpcHQYCSABKAgSEQoJaXNfY3JlYXRlGAogASgIEg8KB2lzX21pbnQYCyABKAgSEgoKaXNfdXBncmFkZRgMIAEoCBIRCglpc191cGxvYWQYDSABKAgSDwoHaXNfYmxvYhgOIAEoCBIgCgdvdXRwdXRzGA8gAygLMg8ub3V0cHV0cy5PdXRwdXQSMAoPb3V0cHV0X2NvbnRyYWN0GBAgASgLMhcub3V0cHV0cy5PdXRwdXRDb250cmFjdBITCgttaW50X2Ftb3VudBgRIAEoAxIVCg1taW50X2Fzc2V0X2lkGBIgASgMEhYKDm1pbnRfZ2FzX3ByaWNlGBMgASgDEhUKDXJlY2VpcHRzX3Jvb3QYFCABKAwSLwoGc3RhdHVzGBUgASgOMh8udHJhbnNhY3Rpb25zLlRyYW5zYWN0aW9uU3RhdHVzEhEKCXdpdG5lc3NlcxgWIAMoDBIOCgZzY3JpcHQYFyABKAwSEwoLc2NyaXB0X2RhdGEYGCABKAwSJgoIcG9saWNpZXMYGSABKAsyFC50cmFuc2FjdGlvbnMuUG9saWN5EgwKBHNhbHQYGiABKAwSFQoNc3RvcmFnZV9zbG90cxgbIAMoDBIeChZieXRlY29kZV93aXRuZXNzX2luZGV4GBwgASgFEhUKDWJ5dGVjb2RlX3Jvb3QYHSABKAwSGAoQc3Vic2VjdGlvbl9pbmRleBgeIAEoBRIaChJzdWJzZWN0aW9uc19udW1iZXIYHyABKAUSEQoJcHJvb2Zfc2V0GCAgAygMEhcKD3VwZ3JhZGVfcHVycG9zZRghIAEoBRIPCgdibG9iX2lkGCIgASgMEhAKCG1hdHVyaXR5GCMgASgFEhMKC3BvbGljeV90eXBlGCQgASgFEhMKC3Jhd19wYXlsb2FkGCUgASgMEhUKDXNjcmlwdF9sZW5ndGgYJiABKAMSGgoSc2NyaXB0X2RhdGFfbGVuZ3RoGCcgASgDEhsKE3N0b3JhZ2Vfc2xvdHNfY291bnQYKCABKAMSFwoPcHJvb2Zfc2V0X2NvdW50GCkgASgFEhcKD3dpdG5lc3Nlc19jb3VudBgqIAEoBRIUCgxpbnB1dHNfY291bnQYKyABKAUSFQoNb3V0cHV0c19jb3VudBgsIAEoBRIiCghtZXRhZGF0YRgtIAEoCzIQLmNvbW1vbi5NZXRhZGF0YSJJCgtTdG9yYWdlU2xvdBIPCgdzdWJqZWN0GAEgASgJEg0KBXR4X2lkGAIgASgMEgsKA2tleRgDIAEoDBINCgV2YWx1ZRgEIAEoDCJcCgdXaXRuZXNzEg8KB3N1YmplY3QYASABKAkSDQoFdHhfaWQYAiABKAwSFAoMd2l0bmVzc19kYXRhGAMgASgMEhsKE3dpdG5lc3NfZGF0YV9sZW5ndGgYBCABKAUiPgoIUHJvb2ZTZXQSDwoHc3ViamVjdBgBIAEoCRINCgV0eF9pZBgCIAEoDBISCgpwcm9vZl9oYXNoGAMgASgMIl4KBlBvbGljeRIPCgdzdWJqZWN0GAEgASgJEg0KBXR4X2lkGAIgASgMEiYKBHR5cGUYAyABKA4yGC50cmFuc2FjdGlvbnMuUG9saWN5VHlwZRIMCgRkYXRhGAQgASgDKnQKD1RyYW5zYWN0aW9uVHlwZRIcChhVTktOT1dOX1RSQU5TQUNUSU9OX1RZUEUQABIKCgZTQ1JJUFQQARIKCgZDUkVBVEUQAhIICgRNSU5UEAMSCwoHVVBHUkFERRAEEgoKBlVQTE9BRBAFEggKBEJMT0IQBip3ChFUcmFuc2FjdGlvblN0YXR1cxIeChpVTktOT1dOX1RSQU5TQUNUSU9OX1NUQVRVUxAAEgoKBkZBSUxFRBABEg0KCVNVQk1JVFRFRBACEhAKDFNRVUVFWkVEX09VVBADEgsKB1NVQ0NFU1MQBBIICgROT05FEAUqXAoKUG9saWN5VHlwZRIXChNVTktOT1dOX1BPTElDWV9UWVBFEAASBwoDVElQEAESEQoNV0lUTkVTU19MSU1JVBACEgwKCE1BVFVSSVRZEAMSCwoHTUFYX0ZFRRAEYgZwcm90bzM", [file_common, file_pointers, file_inputs, file_outputs, file_receipts]);

/**
 * @generated from message transactions.Transaction
 */
export type Transaction = Message<"transactions.Transaction"> & {
  /**
   * @generated from field: string subject = 1;
   */
  subject: string;

  /**
   * Fields matching fuel-core
   *
   * @generated from field: bytes id = 2;
   */
  id: Uint8Array;

  /**
   * @generated from field: int64 script_gas_limit = 3;
   */
  scriptGasLimit: bigint;

  /**
   * @generated from field: pointers.TxPointer tx_pointer = 4;
   */
  txPointer?: TxPointer;

  /**
   * @generated from field: repeated bytes input_asset_ids = 5;
   */
  inputAssetIds: Uint8Array[];

  /**
   * @generated from field: repeated bytes input_contracts = 6;
   */
  inputContracts: Uint8Array[];

  /**
   * @generated from field: inputs.InputContract input_contract = 7;
   */
  inputContract?: InputContract;

  /**
   * @generated from field: repeated inputs.Input inputs = 8;
   */
  inputs: Input[];

  /**
   * @generated from field: bool is_script = 9;
   */
  isScript: boolean;

  /**
   * @generated from field: bool is_create = 10;
   */
  isCreate: boolean;

  /**
   * @generated from field: bool is_mint = 11;
   */
  isMint: boolean;

  /**
   * @generated from field: bool is_upgrade = 12;
   */
  isUpgrade: boolean;

  /**
   * @generated from field: bool is_upload = 13;
   */
  isUpload: boolean;

  /**
   * @generated from field: bool is_blob = 14;
   */
  isBlob: boolean;

  /**
   * @generated from field: repeated outputs.Output outputs = 15;
   */
  outputs: Output[];

  /**
   * @generated from field: outputs.OutputContract output_contract = 16;
   */
  outputContract?: OutputContract;

  /**
   * @generated from field: int64 mint_amount = 17;
   */
  mintAmount: bigint;

  /**
   * @generated from field: bytes mint_asset_id = 18;
   */
  mintAssetId: Uint8Array;

  /**
   * @generated from field: int64 mint_gas_price = 19;
   */
  mintGasPrice: bigint;

  /**
   * @generated from field: bytes receipts_root = 20;
   */
  receiptsRoot: Uint8Array;

  /**
   * @generated from field: transactions.TransactionStatus status = 21;
   */
  status: TransactionStatus;

  /**
   * @generated from field: repeated bytes witnesses = 22;
   */
  witnesses: Uint8Array[];

  /**
   * @generated from field: bytes script = 23;
   */
  script: Uint8Array;

  /**
   * @generated from field: bytes script_data = 24;
   */
  scriptData: Uint8Array;

  /**
   * @generated from field: transactions.Policy policies = 25;
   */
  policies?: Policy;

  /**
   * @generated from field: bytes salt = 26;
   */
  salt: Uint8Array;

  /**
   * @generated from field: repeated bytes storage_slots = 27;
   */
  storageSlots: Uint8Array[];

  /**
   * @generated from field: int32 bytecode_witness_index = 28;
   */
  bytecodeWitnessIndex: number;

  /**
   * @generated from field: bytes bytecode_root = 29;
   */
  bytecodeRoot: Uint8Array;

  /**
   * @generated from field: int32 subsection_index = 30;
   */
  subsectionIndex: number;

  /**
   * @generated from field: int32 subsections_number = 31;
   */
  subsectionsNumber: number;

  /**
   * @generated from field: repeated bytes proof_set = 32;
   */
  proofSet: Uint8Array[];

  /**
   * @generated from field: int32 upgrade_purpose = 33;
   */
  upgradePurpose: number;

  /**
   * @generated from field: bytes blob_id = 34;
   */
  blobId: Uint8Array;

  /**
   * Extra fields (not in fuel-core)
   *
   * @generated from field: int32 maturity = 35;
   */
  maturity: number;

  /**
   * @generated from field: int32 policy_type = 36;
   */
  policyType: number;

  /**
   * @generated from field: bytes raw_payload = 37;
   */
  rawPayload: Uint8Array;

  /**
   * @generated from field: int64 script_length = 38;
   */
  scriptLength: bigint;

  /**
   * @generated from field: int64 script_data_length = 39;
   */
  scriptDataLength: bigint;

  /**
   * @generated from field: int64 storage_slots_count = 40;
   */
  storageSlotsCount: bigint;

  /**
   * @generated from field: int32 proof_set_count = 41;
   */
  proofSetCount: number;

  /**
   * @generated from field: int32 witnesses_count = 42;
   */
  witnessesCount: number;

  /**
   * @generated from field: int32 inputs_count = 43;
   */
  inputsCount: number;

  /**
   * @generated from field: int32 outputs_count = 44;
   */
  outputsCount: number;

  /**
   * Metadata
   *
   * @generated from field: common.Metadata metadata = 45;
   */
  metadata?: Metadata;
};

/**
 * Describes the message transactions.Transaction.
 * Use `create(TransactionSchema)` to create a new message.
 */
export const TransactionSchema: GenMessage<Transaction> = /*@__PURE__*/
  messageDesc(file_transactions, 0);

/**
 * @generated from message transactions.StorageSlot
 */
export type StorageSlot = Message<"transactions.StorageSlot"> & {
  /**
   * @generated from field: string subject = 1;
   */
  subject: string;

  /**
   * @generated from field: bytes tx_id = 2;
   */
  txId: Uint8Array;

  /**
   * @generated from field: bytes key = 3;
   */
  key: Uint8Array;

  /**
   * @generated from field: bytes value = 4;
   */
  value: Uint8Array;
};

/**
 * Describes the message transactions.StorageSlot.
 * Use `create(StorageSlotSchema)` to create a new message.
 */
export const StorageSlotSchema: GenMessage<StorageSlot> = /*@__PURE__*/
  messageDesc(file_transactions, 1);

/**
 * @generated from message transactions.Witness
 */
export type Witness = Message<"transactions.Witness"> & {
  /**
   * @generated from field: string subject = 1;
   */
  subject: string;

  /**
   * @generated from field: bytes tx_id = 2;
   */
  txId: Uint8Array;

  /**
   * @generated from field: bytes witness_data = 3;
   */
  witnessData: Uint8Array;

  /**
   * @generated from field: int32 witness_data_length = 4;
   */
  witnessDataLength: number;
};

/**
 * Describes the message transactions.Witness.
 * Use `create(WitnessSchema)` to create a new message.
 */
export const WitnessSchema: GenMessage<Witness> = /*@__PURE__*/
  messageDesc(file_transactions, 2);

/**
 * @generated from message transactions.ProofSet
 */
export type ProofSet = Message<"transactions.ProofSet"> & {
  /**
   * @generated from field: string subject = 1;
   */
  subject: string;

  /**
   * @generated from field: bytes tx_id = 2;
   */
  txId: Uint8Array;

  /**
   * @generated from field: bytes proof_hash = 3;
   */
  proofHash: Uint8Array;
};

/**
 * Describes the message transactions.ProofSet.
 * Use `create(ProofSetSchema)` to create a new message.
 */
export const ProofSetSchema: GenMessage<ProofSet> = /*@__PURE__*/
  messageDesc(file_transactions, 3);

/**
 * @generated from message transactions.Policy
 */
export type Policy = Message<"transactions.Policy"> & {
  /**
   * @generated from field: string subject = 1;
   */
  subject: string;

  /**
   * @generated from field: bytes tx_id = 2;
   */
  txId: Uint8Array;

  /**
   * @generated from field: transactions.PolicyType type = 3;
   */
  type: PolicyType;

  /**
   * @generated from field: int64 data = 4;
   */
  data: bigint;
};

/**
 * Describes the message transactions.Policy.
 * Use `create(PolicySchema)` to create a new message.
 */
export const PolicySchema: GenMessage<Policy> = /*@__PURE__*/
  messageDesc(file_transactions, 4);

/**
 * @generated from enum transactions.TransactionType
 */
export enum TransactionType {
  /**
   * @generated from enum value: UNKNOWN_TRANSACTION_TYPE = 0;
   */
  UNKNOWN_TRANSACTION_TYPE = 0,

  /**
   * @generated from enum value: SCRIPT = 1;
   */
  SCRIPT = 1,

  /**
   * @generated from enum value: CREATE = 2;
   */
  CREATE = 2,

  /**
   * @generated from enum value: MINT = 3;
   */
  MINT = 3,

  /**
   * @generated from enum value: UPGRADE = 4;
   */
  UPGRADE = 4,

  /**
   * @generated from enum value: UPLOAD = 5;
   */
  UPLOAD = 5,

  /**
   * @generated from enum value: BLOB = 6;
   */
  BLOB = 6,
}

/**
 * Describes the enum transactions.TransactionType.
 */
export const TransactionTypeSchema: GenEnum<TransactionType> = /*@__PURE__*/
  enumDesc(file_transactions, 0);

/**
 * @generated from enum transactions.TransactionStatus
 */
export enum TransactionStatus {
  /**
   * @generated from enum value: UNKNOWN_TRANSACTION_STATUS = 0;
   */
  UNKNOWN_TRANSACTION_STATUS = 0,

  /**
   * @generated from enum value: FAILED = 1;
   */
  FAILED = 1,

  /**
   * @generated from enum value: SUBMITTED = 2;
   */
  SUBMITTED = 2,

  /**
   * @generated from enum value: SQUEEZED_OUT = 3;
   */
  SQUEEZED_OUT = 3,

  /**
   * @generated from enum value: SUCCESS = 4;
   */
  SUCCESS = 4,

  /**
   * @generated from enum value: NONE = 5;
   */
  NONE = 5,
}

/**
 * Describes the enum transactions.TransactionStatus.
 */
export const TransactionStatusSchema: GenEnum<TransactionStatus> = /*@__PURE__*/
  enumDesc(file_transactions, 1);

/**
 * @generated from enum transactions.PolicyType
 */
export enum PolicyType {
  /**
   * @generated from enum value: UNKNOWN_POLICY_TYPE = 0;
   */
  UNKNOWN_POLICY_TYPE = 0,

  /**
   * @generated from enum value: TIP = 1;
   */
  TIP = 1,

  /**
   * @generated from enum value: WITNESS_LIMIT = 2;
   */
  WITNESS_LIMIT = 2,

  /**
   * @generated from enum value: MATURITY = 3;
   */
  MATURITY = 3,

  /**
   * @generated from enum value: MAX_FEE = 4;
   */
  MAX_FEE = 4,
}

/**
 * Describes the enum transactions.PolicyType.
 */
export const PolicyTypeSchema: GenEnum<PolicyType> = /*@__PURE__*/
  enumDesc(file_transactions, 2);

